	component ComputerSystem is
		port (
			audio_pll_clk_clk                      : out   std_logic;                                        -- clk
			clk_clk                                : in    std_logic                     := 'X';             -- clk
			clock_bridge_0_in_clk_clk              : in    std_logic                     := 'X';             -- clk
			coefficents_fifo_a2f_out_readdata      : out   std_logic_vector(31 downto 0);                    -- readdata
			coefficents_fifo_a2f_out_read          : in    std_logic                     := 'X';             -- read
			coefficents_fifo_a2f_out_csr_address   : in    std_logic_vector(2 downto 0)  := (others => 'X'); -- address
			coefficents_fifo_a2f_out_csr_read      : in    std_logic                     := 'X';             -- read
			coefficents_fifo_a2f_out_csr_writedata : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			coefficents_fifo_a2f_out_csr_write     : in    std_logic                     := 'X';             -- write
			coefficents_fifo_a2f_out_csr_readdata  : out   std_logic_vector(31 downto 0);                    -- readdata
			enable_output_byte_export              : out   std_logic_vector(7 downto 0);                     -- export
			fifo_0_in_writedata                    : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			fifo_0_in_write                        : in    std_logic                     := 'X';             -- write
			fifo_0_in_csr_address                  : in    std_logic_vector(2 downto 0)  := (others => 'X'); -- address
			fifo_0_in_csr_read                     : in    std_logic                     := 'X';             -- read
			fifo_0_in_csr_writedata                : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			fifo_0_in_csr_write                    : in    std_logic                     := 'X';             -- write
			fifo_0_in_csr_readdata                 : out   std_logic_vector(31 downto 0);                    -- readdata
			memory_mem_a                           : out   std_logic_vector(14 downto 0);                    -- mem_a
			memory_mem_ba                          : out   std_logic_vector(2 downto 0);                     -- mem_ba
			memory_mem_ck                          : out   std_logic;                                        -- mem_ck
			memory_mem_ck_n                        : out   std_logic;                                        -- mem_ck_n
			memory_mem_cke                         : out   std_logic;                                        -- mem_cke
			memory_mem_cs_n                        : out   std_logic;                                        -- mem_cs_n
			memory_mem_ras_n                       : out   std_logic;                                        -- mem_ras_n
			memory_mem_cas_n                       : out   std_logic;                                        -- mem_cas_n
			memory_mem_we_n                        : out   std_logic;                                        -- mem_we_n
			memory_mem_reset_n                     : out   std_logic;                                        -- mem_reset_n
			memory_mem_dq                          : inout std_logic_vector(31 downto 0) := (others => 'X'); -- mem_dq
			memory_mem_dqs                         : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs
			memory_mem_dqs_n                       : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs_n
			memory_mem_odt                         : out   std_logic;                                        -- mem_odt
			memory_mem_dm                          : out   std_logic_vector(3 downto 0);                     -- mem_dm
			memory_oct_rzqin                       : in    std_logic                     := 'X';             -- oct_rzqin
			reset_reset_n                          : in    std_logic                     := 'X'              -- reset_n
		);
	end component ComputerSystem;

